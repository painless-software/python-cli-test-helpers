# Tox (https://tox.wiki/) - run tests in isolation using virtualenv.
# Also contains config settings for tools that don't look into pyproject.toml.

[tox]
envlist =
    flake8
    isort
    pylint
    bandit
    py2{7}
    py3{5,6,7,8,9,10,11}
    pypy{2,3}
    example-{argparse,click,docopt}
    package
    docs
    clean

[gh-actions]
python =
    2.7: py27
    3.5: py35
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    pypy-2.7: pypy2
    pypy-3.7: pypy3

[testenv]
description = Unit tests
deps =
    py3{9,10,11}: setuptools>=50
    coverage[toml]
    pytest
commands =
    coverage run -m pytest {posargs:tests}
    coverage xml
    coverage report

[testenv:bandit]
description = PyCQA security linter
skip_install = true
deps = bandit[toml]
commands = bandit {posargs:-c pyproject.toml -r .}

[testenv:clean]
description = Remove bytecode and other debris
skip_install = true
deps = pyclean
commands = pyclean {posargs:. --debris --erase build/**/* build/ docs/_build/**/* docs/_build/ tests/junit-report.xml --yes}

[testenv:docs]
description = Build package documentation (HTML)
skip_install = true
deps = sphinx
changedir = docs
commands = make html
allowlist_externals = make

[testenv:example-argparse]
description = Run test suite of example project
deps = copier
skip_install = true
commands =
    copier {toxinidir}/examples/argparse {toxworkdir}/examples/argparse -d package='foobar' -d module='foobar' --defaults
    tox -c {toxworkdir}/examples/argparse/tox.ini -e flake8
    tox -c {toxworkdir}/examples/argparse/tox.ini -e py -- -vv
allowlist_externals =
    tox

[testenv:example-click]
description = Run test suite of example project
deps = copier
skip_install = true
commands =
    copier {toxinidir}/examples/click {toxworkdir}/examples/click -d package='foobar' -d module='foobar' --defaults
    tox -c {toxworkdir}/examples/click/tox.ini -e flake8
    tox -c {toxworkdir}/examples/click/tox.ini -e py -- -vv
allowlist_externals =
    tox

[testenv:example-docopt]
description = Run test suite of example project
deps = copier
skip_install = true
commands =
    copier {toxinidir}/examples/docopt {toxworkdir}/examples/docopt -d package='foobar' -d module='foobar' --defaults
    tox -c {toxworkdir}/examples/docopt/tox.ini -e flake8
    tox -c {toxworkdir}/examples/docopt/tox.ini -e py -- -vv
allowlist_externals =
    tox

[testenv:flake8]
description = Static code analysis and code style
skip_install = true
deps = flake8
commands = flake8 {posargs}

[testenv:isort]
description = Ensure imports are ordered consistently
skip_install = true
deps = isort[colors]
commands = isort {posargs:--check-only --diff cli_test_helpers setup.py tests examples/argparse examples/click examples/docopt}

[testenv:package]
description = Build package and check metadata (or upload package)
skip_install = true
deps =
    build
    twine
commands =
    python -m build
    twine {posargs:check --strict} dist/*
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY_URL

[testenv:pylint]
description = Check for errors and code smells
deps = pylint
commands = pylint {posargs:cli_test_helpers setup}

[flake8]
exclude = .tox,build,dist,cli_test_helpers.egg-info,examples
max-line-length = 88

[pytest]
addopts =
    --color=yes
    --doctest-modules
    --verbose
    --ignore examples/
