# GitLab CI, https://docs.gitlab.com/ee/ci/yaml/
---
.tox:
  image: docker.io/library/python:${PYTHON_VERSION}
  before_script:
  - pip install tox
  script:
  - tox
  variables:
    PIP_DISABLE_PIP_VERSION_CHECK: '1'
    PY_COLORS: '1'
    PYTHON_VERSION: '3.10'
  needs: []
  only:
  - merge_requests
  - main

stages:
- codestyle
- safety
- test
- build
- publish

ruff:
  stage: codestyle
  extends: .tox
  variables:
    TOXENV: ruff

requirements:
  stage: safety
  extends: .tox
  variables:
    TOXENV: requirements

pytest:
  stage: test
  extends: .tox
  variables:
    TOXENV: py
  parallel:
    matrix:
    - PYTHON_VERSION:
      - '3.8'
      - '3.9'
      - '3.10'
      - '3.11'
  coverage: /^TOTAL.+?(\d+\%)$/
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: junit-report.xml

package:
  stage: build
  extends: .tox
  variables:
    TOXENV: package

pypi-local:
  stage: publish
  extends: .tox
  variables:
    GIT_TAG: ${CI_COMMIT_TAG}
    TWINE_USERNAME: gitlab-ci-token
    TWINE_PASSWORD: ${CI_JOB_TOKEN}
    TWINE_REPOSITORY_URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
  script:
  - |
    tox -e package exec --quiet -- python -c '
    from importlib.metadata import version
    from os import environ
    ver = version("{{package}}")
    tag = environ.get("GIT_TAG") or ""
    error = f"`{ver}` != `{tag}`"
    abort = f"Package version does not match the Git tag ({error}). ABORTING."
    raise SystemExit(0 if ver and tag and ver == tag else abort)
    '
  - tox -e package -- upload
  only:
  - tags
